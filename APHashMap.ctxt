#BlueJ class context
comment0.target=APHashMap
comment0.text=\n\ An\ implementation\ of\ a\ HashMap.\n
comment1.params=n
comment1.target=APHashMap(int)
comment2.params=key
comment2.target=java.lang.Object\ get(java.lang.Object)
comment2.text=\n\ Given\ a\ key,\ returns\ the\ corresponding\ value,\n\ or\ null\ if\ there\ is\ no\ entry\ with\ that\ key.\n
comment3.params=key\ value
comment3.target=java.lang.Object\ put(java.lang.Object,\ java.lang.Object)
comment3.text=\n\ Adds\ a\ new\ entry\ to\ the\ Map.\ If\ key\ was\ \n\ already\ in\ the\ map,\ return\ the\ old\ value.\n\ If\ not,\ return\ null.\n
comment4.params=key
comment4.target=java.lang.Object\ remove(java.lang.Object)
comment4.text=\n\ Removes\ and\ returns\ the\ value\ paired\ with\ key.\n\ If\ there\ is\ no\ value,\ do\ not\ alter\ the\ map,\ and\ return\ null.\n
comment5.params=
comment5.target=int\ size()
comment5.text=\n\ Returns\ the\ number\ of\ non-null\ entries\ in\ the\ map.\n\ Note\ this\ is\ NOT\ usually\ equal\ to\ entries.length,\ because\n\ often\ several\ of\ the\ array\ elements\ in\ entries\ are\ null.\n\ \n\ You\ don't\ need\ to\ modify\ this\ method.\ You\ DO\ have\ to\ make\ sure\n\ that\ the\ instance\ variable\ size\ is\ always\ correct,\ as\ you\ write\n\ the\ other\ methods.\n
comment6.params=
comment6.target=void\ printMap()
comment6.text=\n\ Prints\ something\ like,\n\ key1,\ value1\n\ key2,\ value2\n\ .\n\ .\n\ .\n\ \n\ in\ the\ Terminal\ for\ each\ non-null\ entry\n\ in\ the\ map.\ You\ should\ skip\ over\ null\ entries.\n
comment7.params=key
comment7.target=int\ hash(java.lang.Object)
comment7.text=\n\ Private\ method\ --\ you\ DO\ have\ to\ modify\ this\ one.\n\ This\ method\ should\ return\ a\ valid\ hash\ index\ for\ the\ given\ key.\n
comment8.params=n
comment8.target=int\ getNextPrime(int)
comment8.text=\n\ Private\ helper\ methods\ used\ in\ the\ constructor.\n\ You\ don't\ have\ to\ modify\ these.\n
comment9.params=n
comment9.target=boolean\ isPrime(int)
numComments=10
